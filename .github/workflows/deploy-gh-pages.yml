name: Deploy GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/git
            ~/.cargo/registry
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: |
          cargo install trunk || true \
            && rustup target add wasm32-unknown-unknown

      - name: Build the Rust WASM app and all of its assets
        run: trunk build --public-url ${{ github.event.repository.name }}

      - name: Save wasm dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: rsc-dist
          path: /dist
          if-no-files-found: error

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    # Do this only if we are pushing to main, not to pull requests.
    # (Or if we're on a special 'pages-alt' branch, so we can experiment with
    # deployment before pushing to main.)
    # Caution: GitHub's parsing is weird around multiline expressions so just don't.
    # https://github.community/t/how-to-write-multi-line-condition-in-if/128477
    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/pages-alt') }}

    steps:

    - name: Download wasm dist artifact
      uses: actions/download-artifact@v4
      with:
        name: rsc-dist
        path: dist-for-deploy

    - name: Deploy to GitHub Pages
      uses: crazy-max/ghaction-github-pages@v4
      with:
        repo: calastrophe/rsc
        target_branch: gh-pages
        build_dir: dist-for-deploy
        keep_history: false
        jekyll: false
      env:
        GITHUB_TOKEN: ${{ secrets.API_TOKEN_GITHUB_DEMO }}